# Generated by Django 3.0 on 2019-12-17 08:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_name', models.CharField(blank=True, max_length=500)),
                ('monday', models.BooleanField()),
                ('tuesday', models.BooleanField()),
                ('wednesday', models.BooleanField()),
                ('thursday', models.BooleanField()),
                ('friday', models.BooleanField()),
                ('saturday', models.BooleanField()),
                ('sunday', models.BooleanField()),
                ('advance_notice', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weather_option', models.CharField(choices=[('apparentTemperature', 'Apparent Temperature'), ('apparentTemperatureHigh', 'Apparent Temperature High'), ('apparentTemperatureHighTime', 'Apparent Temperature High Time'), ('apparentTemperatureLow', 'Apparent Temperature Low'), ('apparentTemperatureLowTime', 'Apparent Temperature Low Time'), ('cloudCover', 'Cloud Cover'), ('dewPoint', 'Dew Point'), ('humidity', 'Humidity'), ('icon', 'Icon'), ('moonPhase', 'Moon Phase'), ('nearestStormBearing', 'Nearest Storm Bearing'), ('nearestStormDistance', 'Nearest Storm Distance'), ('ozone', 'Ozone'), ('precipAccumulation', 'Precipitation Accumulation'), ('precipIntensity', 'Precipitation Intesity'), ('precipIntensityError', 'Precipitation Intensity Error'), ('precipIntensityMax', 'Maximum Precipitation Intensity'), ('precipIntensityMaxTime', 'Precipitation Intensity Max Time'), ('precipProbability', 'Precipitation Probability'), ('precipType', 'Precipitation Type'), ('pressure', 'Pressure'), ('summary', 'Summary'), ('sunriseTime', 'Sunrise Time'), ('sunsetTime', 'Sunset Time'), ('temperature', 'Temperature'), ('temperatureHigh', 'Temperature High'), ('temperatureHighTime', 'Temperature High Time'), ('temperatureLow', 'Temperature Low'), ('temperatureLowTime', 'Temperature Low Time'), ('time', 'Time'), ('uvIndex', 'UV Index'), ('uvIndexTime', 'UV Index Time'), ('visibility', 'Visibility'), ('windBearing', 'Wind Bearing'), ('windGust', 'Wind Gust'), ('windGustTime', 'Wind Gust Time'), ('windSpeed', 'Wind Speed')], max_length=500)),
                ('number', models.DecimalField(decimal_places=4, max_digits=8)),
                ('compare_option', models.CharField(choices=[('exactly', 'exactly'), ('between', 'between'), ('more', 'more than'), ('less', 'less than'), ('enum', 'enum')], max_length=7)),
                ('range', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
            ],
        ),
        migrations.AddConstraint(
            model_name='location',
            constraint=models.CheckConstraint(check=models.Q(latitude__range=(-90, 90)), name='latitude between -90 and 90'),
        ),
        migrations.AddConstraint(
            model_name='location',
            constraint=models.CheckConstraint(check=models.Q(longitude__range=(-180, 180)), name='longitude between -180 and 180'),
        ),
        migrations.AddField(
            model_name='filter',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to='alerts.Location'),
        ),
        migrations.AddField(
            model_name='alert',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='alerts.Location'),
        ),
        migrations.AddField(
            model_name='alert',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='filter',
            constraint=models.CheckConstraint(check=models.Q(models.Q(models.Q(_negated=True, compare_option__iexact='between'), ('range__isnull', True)), models.Q(('compare_option__iexact', 'between'), ('range__isnull', False)), _connector='OR'), name='if compare option is between, range is not null'),
        ),
        migrations.AlterUniqueTogether(
            name='filter',
            unique_together={('location', 'weather_option')},
        ),
        migrations.AlterUniqueTogether(
            name='alert',
            unique_together={('recipient', 'location')},
        ),
    ]
